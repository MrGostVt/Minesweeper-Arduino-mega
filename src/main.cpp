#include <Arduino.h>
#include <SPI.h>
#include <math.h>
#include <headers/display.h>
#include <headers/image.h>
#include <headers/minesweep.h>
// #include <headers/utils.h>
#include <stdlib.h>

//display pins
#define TFT_CS   10
#define TFT_DC   9
#define TFT_RST  8

#define TFT_WIDTH  240
#define TFT_HEIGHT 320

//rgb565 macros
#define COLOR565(r, g, b) ((((r) & 0xF8) << 8) | (((g) & 0xFC) << 3) | ((b) >> 3))

//images
uint16_t grassImage[100] = {
  0x0540, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x0540, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 
  0x0540, 0x02a0, 0x0540, 0x0540, 0x02a0, 0x02a0, 0x02a0, 0x0540, 0x0540, 0x02a0, 
  0x02a0, 0x02a0, 0x0540, 0x02a0, 0x02a0, 0x0540, 0x02a0, 0x02a0, 0x0540, 0x02a0, 
  0x0540, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x0540, 0x0540, 0x02a0, 0x02a0, 0x02a0, 
  0x0540, 0x0540, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x0540, 
  0x02a0, 0x02a0, 0x0540, 0x02a0, 0x02a0, 0x0540, 0x02a0, 0x02a0, 0x02a0, 0x0540, 
  0x02a0, 0x0540, 0x0540, 0x02a0, 0x02a0, 0x0540, 0x0540, 0x02a0, 0x02a0, 0x02a0, 
  0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 
  0x0540, 0x02a0, 0x02a0, 0x0540, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x0540, 0x02a0, 
  0x0540, 0x02a0, 0x02a0, 0x0540, 0x0540, 0x02a0, 0x02a0, 0x0540, 0x0540, 0x02a0
};
uint16_t grassFlagImage[100] = {
  0x0540, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 0x0540, 0x02a0, 0x02a0, 0x02a0, 0x02a0, 
  0x0540, 0x02a0, 0xc000, 0xc000, 0xf800, 0xf800, 0xc000, 0xc000, 0x0540, 0x02a0, 
  0x02a0, 0xc000, 0xc000, 0xc000, 0xf800, 0xf800, 0xc000, 0xc000, 0xc000, 0x02a0, 
  0x0540, 0xc000, 0xc000, 0xf800, 0xf800, 0xf800, 0xf800, 0xc000, 0xc000, 0x02a0, 
  0x0540, 0xf800, 0xf800, 0xf800, 0xc000, 0xc000, 0xf800, 0xf800, 0xf800, 0x0540, 
  0x02a0, 0xf800, 0xf800, 0xf800, 0xc000, 0xc000, 0xf800, 0xf800, 0xf800, 0x0540, 
  0x02a0, 0xc000, 0xc000, 0xf800, 0xf800, 0xf800, 0xf800, 0xc000, 0xc000, 0x02a0, 
  0x02a0, 0xc000, 0xc000, 0xc000, 0xf800, 0xf800, 0xc000, 0xc000, 0xc000, 0x02a0, 
  0x0540, 0x02a0, 0xc000, 0xc000, 0xf800, 0xf800, 0xc000, 0xc000, 0x0540, 0x02a0, 
  0x0540, 0x02a0, 0x02a0, 0x0540, 0x0540, 0x02a0, 0x02a0, 0x0540, 0x0540, 0x02a0
};
uint16_t sandImage[100] = {
  0xffef, 0xd6ad, 0xffef, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 0xffef, 0xffef, 0xd6ad, 
  0xffef, 0xffef, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 
  0xd6ad, 0xd6ad, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 0xd6ad, 0xffef, 
  0xffef, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 0xd6ad, 0xd6ad, 0xffef, 0xffef, 0xffef, 
  0xffef, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 0xd6ad, 0xd6ad, 0xd6ad, 0xffef, 0xd6ad, 
  0xd6ad, 0xffef, 0xffef, 0xd6ad, 0xd6ad, 0xd6ad, 0xd6ad, 0xd6ad, 0xffef, 0xd6ad, 
  0xd6ad, 0xd6ad, 0xffef, 0xd6ad, 0xd6ad, 0xd6ad, 0xd6ad, 0xffef, 0xffef, 0xffef, 
  0xffef, 0xffef, 0xffef, 0xd6ad, 0xd6ad, 0xd6ad, 0xffef, 0xd6ad, 0xd6ad, 0xffef, 
  0xffef, 0xffef, 0xd6ad, 0xffef, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 0xffef, 0xd6ad, 
  0xd6ad, 0xd6ad, 0xffef, 0xffef, 0xffef, 0xffef, 0xd6ad, 0xffef, 0xffef, 0xd6ad
};

Display displayController(0,0,0,0,0);

void setup() {
  Serial.begin(9600);
  srand(analogRead(millis()));  
  pinMode(TFT_CS, OUTPUT);
  pinMode(TFT_DC, OUTPUT);
  pinMode(TFT_RST, OUTPUT);
  
  SPI.begin();
  SPI.beginTransaction(SPISettings(40000000, MSBFIRST, SPI_MODE0));

  displayController = Display(TFT_CS, TFT_DC, TFT_RST, TFT_WIDTH, TFT_HEIGHT);

  displayController.initILI9341();
  // initILI9341();

  displayController.fillScreen(COLOR565(30, 144, 52));  // очистка
  // delay(500);
  ImageBmp<100> grass = ImageBmp<100>(10,10, grassImage);
  ImageBmp<100> grassFlag = ImageBmp<100>(10,10, grassFlagImage);
  ImageBmp<100> sand = ImageBmp<100>(10,10, sandImage);
  
  Minesweep game(TFT_WIDTH, TFT_HEIGHT);
  game.start(2,2);
  ImageBmp<100> images[6] = {sand, grass, grassFlag, grassFlag, grass, grass};
  auto& field = game.getField();

  // displayController.drawImage(grass.getImageData(), grass.getWidth(), 40, 40, 25,30);
  // delay(10000);
  displayController.drawFieldByImages(
    images, game.getCeilSize(), 6, field, game.getFieldWidth(), game.getFieldHeight() 
  );
  // displayController.drawImage(grassFlag.getImageData(), grassFlag.getWidth(), 40, 40, 65,30);
  // displayController.drawImage(sand.getImageData(), sand.getWidth(), 40, 40, 25,70);
  // displayController.drawImage(sand.getImageData(), sand.getWidth(), 40, 40, 65,70);


  // Пример вывода
  // Serial.println();
  // Serial.write("Pixel Size: ");
  // Serial.print(pixel_size);

  // Пример заливок
  // fillScreen(COLOR565(255, 0, 0)); delay(500);
  // fillScreen(COLOR565(0, 255, 0)); delay(500);
  // fillScreen(COLOR565(0, 0, 255)); delay(500);

  // Нарисуем градиент
  // for (uint16_t y = 0; y < TFT_HEIGHT; y++) {
  //   for (uint16_t x = 0; x < TFT_WIDTH; x++) {
  //     uint16_t color = COLOR565(x % 256, y % 256, (x + y) % 128);
  //     drawPixel(x, y, color);
  //   }
  // }
}

void loop() {}
